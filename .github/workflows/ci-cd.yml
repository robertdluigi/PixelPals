name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and Push Frontend Docker Image (Next.js)
      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pixelpals-frontend:v1.0 ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/pixelpals-frontend:v1.0

      # Build and Push Backend Docker Image (Go)
      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pixelpals-backend:v1.0 ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/pixelpals-backend:v1.0

      # Deploy to Ubuntu Server
      - name: Deploy application to Ubuntu server
        run: |
          # Save the private key to a file
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Check the private key exists and debug if necessary
          ls -al ~/.ssh
          cat ~/.ssh/id_rsa

          # Add the server's SSH key fingerprint to known hosts to avoid host verification prompt
          ssh-keyscan -p 2222 ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

          # SSH and Deploy to the server using the private key
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 2222 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            # Navigate to the project folder (if not already there)
            cd ~/pixelpals
            
            # Ensure we have the latest code (optional if you pull latest code with `git pull`)
            git pull origin main

            # Use the existing docker-compose.yml from the project root
            docker-compose down
            docker-compose pull
            docker-compose up -d
          EOF
